syntax = "proto3";

package kv;

option go_package = "cs426.yale.edu/lab4/kv/proto";

message OdsInfo {
	int64 size = 1; //The full expected size of the object upon completion
	map<string, bool> location_infos = 2; //node and completion status pairing (1 if complete, 0 if partial)
}

message OdsGetRequest {
	string key = 1;
}

message OdsSetRequest {
	string key = 1;
	OdsInfo value = 2; //LocationInfos should have 1 element in this case
	int64 ttl_ms = 3;
}

message OdsDeleteRequest {
	string key = 1;
	string node_name = 2;
}

message OdsGetResponse {
	OdsInfo value = 1;
	bool was_found = 2;
}

message OdsSetResponse {}
message OdsDeleteResponse {}


message GetShardContentsRequest {
	int32 shard = 1;
}

message GetShardValue {
	string key = 1;
	OdsInfo value = 2;
}

message GetShardContentsResponse {
	repeated GetShardValue values = 1;
}

service Kv {
	rpc OdsGet(OdsGetRequest) returns (OdsGetResponse);
	rpc OdsSet(OdsSetRequest) returns (OdsSetResponse);
	rpc OdsDelete(OdsDeleteRequest) returns (OdsDeleteResponse);

	rpc GetShardContents(GetShardContentsRequest) returns (GetShardContentsResponse);
}

message TaskRequest { 
	string obj_id = 1; //object id of the to-be created object
	int32 task_id = 2;
	repeated string args = 3; //List of arguments as objId’s associated with the task
	map<string, bytes> obj_id_to_obj = 4; //Pre-specified params (“generic” type)
}

message TaskResponse { }

message TaskAnsRequest { 
	string obj_id = 1;
}

message TaskAnsResponse { 
	bytes res = 1;
}